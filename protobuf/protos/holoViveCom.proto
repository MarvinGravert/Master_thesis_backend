syntax="proto3";

//package unary;

//package unary;
service Backend{
    rpc LighthouseReport(stream LighthouseState ) returns (Empty){}//transmit the current State of all connected LH objects
    rpc ProvideTrackerInfo(Empty) returns ( TrackerState){} // provide information about the connected trackers
    rpc ChangeStatus(Status) returns (Empty){} //change the status which is sent to the hololens (mainly used to control from outside)
    // Following function are used to manage the calribation information
    // One RPC to send and one to receive
    // GetCalibration is used from services on startup to get the calibrationinfo
    // UpdateCalibration is called when a new calibration becomes available or is set
    rpc UpdateCalibrationInfo(CalibrationInfo) returns(Empty){} 
    rpc GetCalibrationInfo(Empty) returns (CalibrationInfo){}}

message Status{
    string status=1;
}
message Empty{}

/*
/////////////////////
    LIGHTHOUSE
/////////////////////
*/
message LighthouseState{
    Tracker holoTracker=1;
    Tracker caliTracker=2;
    HandheldController controller=3;
}

message TrackerState{
    Tracker holoTracker=1;
    Tracker caliTracker=2;
}
message Tracker{
    string ID=1;
    Quaternion rotation=2;
    repeated float position=3; // x y z 
}

message HandheldController{
    string ID=1;
    Quaternion rotation=2;
    repeated float position=3;
    map<string,string> button_state=4; //#REVIEW: specifcially add the state? see holorob architecture
}
message Quaternion{
    repeated float quat=1;//w i j k 
}


/*
/////////////////////
    Hololens-Vive-Calibration
/////////////////////
*/
message CalibrationInfo{
    string status=1;
}